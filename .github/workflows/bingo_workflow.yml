name: BINGO WORKFLOW

on:
  push:
    branches:
      - githubActions_improvement

jobs:
  # syntax_check_job:
  #   name: syntax_check_job
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Linter execution
  #       uses: github/super-linter@v3
  #       env:
  #         DEFAULT_BRANCH: githubActions_improvement
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         LINTER_RULES_PATH: /
  #         JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.js
  #         VALIDATE_JAVASCRIPT_ES: true
  test_execution_job:
    name: test_execution_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run jest tests
        run: npm install; npm test
  # build_statics_job:
  #   name: build_statics_job
  #   runs-on: ubuntu-latest
  #   needs: [syntax_check_job, test_execution_job]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Build code
  #       run: npm install; npm run buildDev
  #     - name: Generate artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: artifact
  #         path: ./build
  # deploy_job:
  #   runs-on: ubuntu-latest
  #   needs: build_statics_job
  #   steps:
  #     - name: Artifact download
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #     - name: Surge upload
  #       uses: dswistowski/surge-sh-action@v1
  #       with:
  #         domain: tonomolla6.surge.sh
  #         project: .
  #         login: ${{ secrets.SURGE_EMAIL }}
  #         token: ${{ secrets.SURGE_TOKEN }}
  notification_job:
    name: notification_job
    runs-on: ubuntu-latest
    needs: [test_execution_job]
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run action
        uses: ./.github/actions/send_email
        with:
          user: ${{ secrets.EMAIL_USERNAME }}
          pass: ${{ secrets.EMAIL_PASSWORD }}
          email_destination: ${{ secrets.EMAIL_DESTINATION }}
          syntax_check_job: ${{ needs.syntax_check_job.outputs.job-status }}
          test_execution_job: ${{ needs.test_execution_job.outputs.job-status }}
          build_statics_job: ${{ needs.build_statics_job.outputs.job-status }}
          deploy_job: ${{ needs.deploy_job.outputs.job-status }}
